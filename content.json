{"meta":{"title":"文庆的个人博客","subtitle":null,"description":"O(∩_∩)O","author":"文庆","url":"https://baowenqing.github.io"},"pages":[],"posts":[{"title":"","slug":"Bugly热更新","date":"2017-12-14T01:54:46.466Z","updated":"2017-12-14T02:57:06.292Z","comments":true,"path":"2017/12/14/Bugly热更新/","link":"","permalink":"https://baowenqing.github.io/2017/12/14/Bugly热更新/","excerpt":"","text":"// 签名配置 123456789101112signingConfigs &#123; release &#123; try &#123; storeFile file(&quot;key.jks&quot;) storePassword &quot;******&quot; keyAlias &quot;key&quot; keyPassword &quot;******&quot; &#125; catch (ex) &#123; throw new InvalidUserDataException(ex.toString()) &#125; &#125;&#125; 必须要配置多渠道签名和热更新需要的 1234app.buildapply from: &apos;tinker-support.gradle&apos;// 多渠道使用walle示例（注：多渠道使用）apply plugin: &apos;walle&apos; 123456// 热更新 热升级 compile &quot;com.android.support:multidex:1.0.1&quot; // 多dex配置 compile &apos;com.tencent.bugly:crashreport_upgrade:1.3.1&apos;//其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.2.0 compile &apos;com.tencent.bugly:nativecrashreport:latest.release&apos; //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0 //瓦力的多渠道打包 compile &apos;com.meituan.android.walle:library:1.1.3&apos; 123456789walle &#123;// 打包执行的命令 gradlew clean assembleReleaseChannels // 指定渠道包的输出路径 apkOutputFolder = new File(&quot;$&#123;project.buildDir&#125;/outputs/channels&quot;); // 定制渠道包的APK的文件名称 apkFileNameFormat = &apos;$&#123;appName&#125;-$&#123;packageName&#125;-$&#123;channel&#125;-$&#123;buildType&#125;-v$&#123;versionName&#125;-$&#123;versionCode&#125;-$&#123;buildTime&#125;.apk&apos;; // 渠道配置文件 channelFile = new File(&quot;$&#123;project.getProjectDir()&#125;/channel&quot;)&#125; 项目.build 12345678910111213141516171819202122232425262728293031// tinkersupport插件, 其中lastest.release指拉取最新版本，也可以指定明确版本号，例如1.0.4classpath &quot;com.tencent.bugly:tinker-support:1.0.8&quot;classpath &apos;com.meituan.android.walle:plugin:1.1.3&apos;public class App extends Application &#123; @Override public void onCreate() &#123; super.onCreate(); //设置是开发者的设备 Bugly.setIsDevelopmentDevice(getApplicationContext(),true); String channel = WalleChannelReader.getChannel(getApplication()); Bugly.setAppChannel(getApplication(), channel); Bugly.init(this, &quot;******&quot;, true); Beta.smallIconId = R.drawable.pikaqiu; Beta.defaultBannerId = R.drawable.pikaqiu; Beta.canShowUpgradeActs.add(MainActivity.class); Beta.storageDir = Environment. getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS); Beta.initDelay = 1 * 1000; Beta.autoInit = false; &#125; @Override protected void attachBaseContext(Context base) &#123; super.attachBaseContext(base); // you must install multiDex whatever tinker is installed! MultiDex.install(base); // 安装tinker Beta.installTinker(); &#125;&#125; 这个是 正式版打包（目前上的基准包） 发布 补丁的话 要求 123456789101112里面的/*** 此处填写每次构建生成的基准包目录 新版本发布的时候 建议保存一份*/def baseApkDir = &quot;app-0630-13-26-10&quot;// 构建基准包和补丁包都要指定不同的tinkerId，并且必须保证唯一性tinkerId = &quot;1.0.4&quot;（唯一的一个名字就行 不用和项目的版本号一样）要更改安装正式包的 需要安装基带下的apk 或者用瓦力打包 瓦力打包下的 相当于加了基带修改需要改动的bug代码 执行buildAllFlavorsTinkerPatchRelease生成所有渠道补丁包 image 得到的patch文件夹的 7zip这个文件就是补丁啦","categories":[],"tags":[]}]}